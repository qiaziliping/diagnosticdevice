<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.3.RELEASE</version>
	</parent>
	<groupId>com.launch.diagdevice</groupId>
	<artifactId>diagnosticdevice</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>diagnosticdevice</name>
	<description>diagnosticdevice</description>
	<modules>
		<module>diagdevice-app-api</module>
		<module>diagdevice-app-service</module>
		<module>diagdevice-app-client</module>
		<module>diagdevice-pay-api</module>
		<module>diagdevice-pay-service</module>
		<module>diagdevice-common</module>
		<module>diagdevice-mycar-api</module>
		<module>diagdevice-mycar-service</module>
		<module>diagdevice-blockchain-api</module>
		<module>diagdevice-blockchain</module>
		<module>diagdevice-web</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<start-class>com.launch.diagdevice.App</start-class>
		<java.version>1.8</java.version>
		<spring-boot.version>2.0.3.RELEASE</spring-boot.version>
		<dubbo-spring-boot.version>0.2.0</dubbo-spring-boot.version>
		<zkclient.version>0.2</zkclient.version>
		<mybatis-spring-boot.version>1.3.2</mybatis-spring-boot.version>
		<druid-spring-boot.version>1.1.9</druid-spring-boot.version>
		<lombok.version>1.16.18</lombok.version>
		<pagehelper-spring-boot.version>1.2.5</pagehelper-spring-boot.version>
		<mysql.version>5.1.44</mysql.version>
		<oracle.version>11.2.0.4</oracle.version>

	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-tomcat</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- springboot默认json解析，jackson -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-json</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-undertow</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>com.alibaba.boot</groupId>
				<artifactId>dubbo-spring-boot-starter</artifactId>
				<version>${dubbo-spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>com.101tec</groupId>
				<artifactId>zkclient</artifactId>
				<version>${zkclient.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-actuator</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>com.alibaba.boot</groupId>
				<artifactId>dubbo-spring-boot-actuator</artifactId>
				<version>${dubbo-spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>

			<dependency>
				<groupId>oracle.ojdbc</groupId>
				<artifactId>ojdbc6</artifactId>
				<version>${oracle.version}</version>
			</dependency>

			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>${mybatis-spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid-spring-boot-starter</artifactId>
				<version>${druid-spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>

			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper-spring-boot-starter</artifactId>
				<version>${pagehelper-spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-autoconfigure</artifactId>
				<version>${mybatis-spring-boot.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- dev开发环境，sit测试环境，for海外正式，pro国内正式 -->
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<profiles.active>dev</profiles.active>
				<!-- <url>jdbc:oracle:thin:@192.168.93.209:1521:mycar</url>
				<password>LAklwIhQvbxg17KMv9aNb9zL323Us30ClQXIQWrw34tpDnRG9qrUkOpJaIwYAwoaMTWN836Kv4Q+BKLC/L3xlw==</password>
				<publickey>MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAK8rDCba6fcMtN8pMG+OQmIsW2Mqi4EDC7h2A1h4z0cudepWQo3I/aJr6rEIcTnjBqXXXgMMxx2u73zHus2qJUMCAwEAAQ==</publickey>
				<service>http://golo.test.x431.com/inner.api.dbscar.com/?</service> -->
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<profiles.active>test</profiles.active>
				<!-- <url>jdbc:oracle:thin:@192.168.93.209:1521:mycar</url>
				<password>LAklwIhQvbxg17KMv9aNb9zL323Us30ClQXIQWrw34tpDnRG9qrUkOpJaIwYAwoaMTWN836Kv4Q+BKLC/L3xlw==</password>
				<publickey>MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAK8rDCba6fcMtN8pMG+OQmIsW2Mqi4EDC7h2A1h4z0cudepWQo3I/aJr6rEIcTnjBqXXXgMMxx2u73zHus2qJUMCAwEAAQ==</publickey>
				<service>http://golo.test.x431.com/inner.api.dbscar.com/?</service> -->
			</properties>
		</profile>
		<profile>
			<id>for</id>
			<properties>
				<profiles.active>for</profiles.active>
				<!-- <url>jdbc:oracle:thin:@mycar.us.db:1521:mycar</url>
				<password>loicXZg/QLc08OdyGAmiPyFqbW0/MrNHMWYf/AzX1mzNZF/P2WFEesvVD0qQfQ/NJeAkSyvWnGD/f3FWgNBbhA==</password>
				<publickey>MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAL3ZnQPuixhR+7NBh9ifYCo+4JOI2PmGya34bj4tkvs/mBIChdVawC9TI5xvoIwz/aLRqohTKSMUlZ4KWyfuIPUCAwEAAQ==</publickey>
				<service>http://inner.us.api.dbscar.com/?</service> -->
			</properties>
		</profile>
		<profile>
			<id>pro</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<profiles.active>pro</profiles.active>
				<!-- <url>jdbc:oracle:thin:@mycar.cn.db:1521:mycar</url>
				<password>LAklwIhQvbxg17KMv9aNb9zL323Us30ClQXIQWrw34tpDnRG9qrUkOpJaIwYAwoaMTWN836Kv4Q+BKLC/L3xlw==</password>
				<publickey>MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAL3ZnQPuixhR+7NBh9ifYCo+4JOI2PmGya34bj4tkvs/mBIChdVawC9TI5xvoIwz/aLRqohTKSMUlZ4KWyfuIPUCAwEAAQ==</publickey>
				<service>http://inner.api.dbscar.com/?</service> -->
			</properties>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<fork>true</fork>
					<executable>true</executable>
				</configuration>
				<!-- <dependencies> -->
				<!-- spring热部署 -->
				<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>springloaded</artifactId> 
					<version>1.2.6.RELEASE</version> </dependency> -->
				<!-- </dependencies> -->
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- 指定maven插件编译版本 1：maven：since2.0, 默认用jdk1.3来编译，maven 3.x 貌似是默认用jdk 
					1.5。 2：windows默认使用GBK编码，java项目经常编码为utf8，也需要在compiler插件中指出，否则中文乱码可能会出现编译错误。 -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中不能使用低版本jdk中不支持的语法)，会存在target不同于source的情况 -->
					<source>1.8</source> <!-- 源代码使用的JDK版本 -->
					<target>1.8</target> <!-- 需要生成的目标class文件的编译版本 -->
					<encoding>UTF8</encoding>
				</configuration>
			</plugin>
			
			<!-- maven intall 打包时跳过测试 -->
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-surefire-plugin</artifactId>
		        <configuration>
		          <skip>true</skip>
		        </configuration>
		     </plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.properties</include>
					<!-- <include>**/*.yml</include> -->
					<include>**/*.xml</include>
					<include>templates/**</include>
					<include>static/**</include>
				</includes>
				<excludes>
					<exclude>profiles/**</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources/profiles/${profiles.active}</directory>
			</resource>
		</resources>
	</build>

</project>