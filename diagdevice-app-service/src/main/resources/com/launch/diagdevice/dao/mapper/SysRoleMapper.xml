<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.launch.diagdevice.dao.mapper.SysRoleMapper">

	<resultMap id="baseResultMap" type="SysRole">
		<result property="id" column="id" />
		<result property="roleName" column="role_name" />
		<result property="roleCode" column="role_code" />
		<result property="roleType" column="role_type" />
		<result property="isValid" column="is_valid" />
		<result property="remark" column="remark" />
		<result property="status" column="status" />
		<result property="createUserId" column="create_user_id" />
		<result property="createTime" column="create_time" />
		<result property="updateUserId" column="update_user_id" />
		<result property="updateTime" column="update_time" />
	</resultMap>
	
	<sql id="baseNotIdColumns">
		role_name,role_code,role_type,is_valid,
		remark,status,create_user_id,create_time,update_user_id,update_time
	</sql>
	<sql id="baseColumns">
		id,role_name,role_code,role_type,is_valid,
		remark,status,create_user_id,create_time,update_user_id,update_time
	</sql>

	<sql id="updateColumns">
		<set>
			<if test="roleName != null">
				role_name = #{roleName},
			</if>
			<if test="roleCode != null">
				role_code = #{roleCode},
			</if>
			<if test="roleType != null">
				role_type = #{roleType},
			</if>
			<if test="isValid != null">
				is_valid = #{isValid},
			</if>
			<if test="remark != null">
				remark = #{remark},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="createUserId != null">
				create_user_id = #{createUserId},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="updateUserId != null">
				update_user_id = #{updateUserId},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
		</set>
	</sql>
	
	<sql id="whereClause">
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="id != null">
				AND ${columnPrefix}id = #{id}
			</if>
			<if test="roleName != null">
				AND ${columnPrefix}role_name LIKE CONCAT('%',#{roleName},'%')
			</if>
			<if test="roleCode != null">
				AND ${columnPrefix}role_code LIKE CONCAT('%',#{roleCode},'%')
			</if>
			<if test="roleType != null">
				AND ${columnPrefix}role_type = #{roleType}
			</if>
			<if test="status != null">
				AND ${columnPrefix}status = #{status}
			</if>
			<if test="isValid != null">
				AND ${columnPrefix}is_valid = #{isValid}
			</if>
		</trim>
	</sql>
	<update id="update" parameterType="SysRole">
		UPDATE sys_role 
		<include refid="updateColumns" />
		WHERE id = #{id}
	</update>
	
	<delete id="delete" parameterType="SysRole">
		DELETE FROM  sys_role 
		WHERE id = #{id}
	</delete>

	<select id="selectById" parameterType="Long"
		resultMap="baseResultMap">
		SELECT
		<include refid="baseColumns" />
		FROM sys_role
		WHERE id = #{id}
	</select>
	
	<select id="selectByIndex" parameterType="SysRole"
		resultMap="baseResultMap">
		SELECT
		<include refid="baseColumns" />
		FROM sys_role
		<include refid="whereClause">
			<property name="columnPrefix" value="" />
        </include>
	</select>
	
	<select id="selectByUserId" parameterType="Long" resultMap="baseResultMap">
		SELECT A.* FROM sys_role A 
		LEFT JOIN sys_user_role B ON A.id = B.role_id
		LEFT JOIN sys_user C ON B.user_id = C.id
		WHERE C.id = #{userId}
	</select>
	
<!-- 	<select id="selectVoByCondition" statementType="PREPARED" resultMap="voBaseResultMap"> -->
<!-- 		SELECT -->
<!-- 			A.id,A.serial_no,A.device_type,A.device_group_id,A.location,A.owner,A.voucher, -->
<!-- 			A.remark,A.status,A.create_user_id,A.create_time,A.update_user_id,A.update_time, -->
<!-- 			B.group_name AS device_group_name -->
<!-- 		FROM device A,device_group B -->
<!-- 		<include refid="whereClause"> -->
<!-- 			<property name="columnPrefix" value="A." /> -->
<!-- 		</include> -->
<!-- 		AND A.device_group_id = B.id -->
<!-- 		ORDER BY ${orderBy} ${orderByType} -->
<!-- 	</select> -->

	<insert id="save" parameterType="SysRole">
		INSERT INTO sys_role (
		<include refid="baseNotIdColumns" />
		) VALUES (
		#{roleName},
		#{roleCode},
		#{roleType},
		#{isValid},
		#{remark},
		#{status},
		#{createUserId},
		#{createTime},
		#{updateUserId},
		#{updateTime}
		)
	</insert>
	
</mapper>

